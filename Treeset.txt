

		  package core;
		  import java.util.* ;


		  public class link {public static void main (String[]args){
		  	Set<Integer> treeSet =  new TreeSet <Integer>();
		  	Iterator<Integer> its = treeSet.iterator();
		  	  float startTime = System.nanoTime();

	  
		  	                for (int i = 0; i < 100000; i++) {treeSet.add(i);}

	
		  	                long endTime = System.nanoTime();
		                  float small = endTime - startTime;
	 
		  	                System.out.print("treeSet add:"+ small / 1000000.0 + "ms"+ "\n" );;


		            while (its.hasNext()){int i = (int) its.next();}


		            endTime = System.nanoTime();
		           float midle = endTime - startTime;

		           System.out.println("treeSet interate: " + midle / 1000000.0 + "ms");
		           startTime = System.nanoTime();

         
          

         
		                         for (int i = 9999; i >= 0; i--) {treeSet.remove(i);}

         
		                         endTime = System.nanoTime();
		                         float biges = endTime - startTime;
         
		                         System.out.println ("TreeSet remove:  " + biges / 1000000.0 + "ms");
		                         System.out.println ("TreeSet interate faster than add:"+ midle / small +   "times");
		                         System.out.println ("TreeSet add faster than remove:" + biges / small + "times");}
		  }




          